@model EmployeesManagement.Models.LoginViewModel
@using Microsoft.AspNetCore.Mvc.ViewFeatures

@{
	ViewData["Title"] = "Login";
}

<h2>Login</h2>

<form asp-action="Login" method="post">
	<div asp-validation-summary="ModelOnly" class="text-danger"></div>
	<div class="form-group">
		<label asp-for="Email" class="control-label"></label>
		<input asp-for="Email" id="Email" class="form-control" />
		<span asp-validation-for="Email" class="text-danger"></span>
	</div>
	<div class="form-group">
		<label asp-for="Password" class="control-label"></label>
		<input asp-for="Password" id="Password" class="form-control" />
		<span asp-validation-for="Password" class="text-danger"></span>
	</div>
	<div class="form-group">
		<div class="checkbox">
			<label asp-for="RememberMe">
				<input asp-for="RememberMe" id="RememberMe" />
				@Html.DisplayNameFor(m => m.RememberMe)
			</label>
		</div>
	</div>
	<div class="form-group">
		<input type="submit" id="showLogin" value="Login" class="btn btn-primary" />
	</div>
</form>

@if (TempData["SweetAlertLogin"] != null)
{
	@section Scripts {
	<script>
		document.addEventListener('DOMContentLoaded', function () {
			const showLoginButton = document.getElementById('showLogin');

			if (showLoginButton) {
				showLoginButton.addEventListener('click', function () {
					Swal.fire({
						position: "center",
						icon: '@TempData["SweetAlertLogin"]',
							title: '@TempData["SweetAlertLogin"]' === 'success' ? "Success!" : "Error!",
							text: '@TempData["SweetAlertLogin"]' === 'success' ? "Login successful." : "Invalid email or password.",
							showConfirmButton: false,
							timer: 3000
						});
					});
				}
			});
		</script>
	}
}